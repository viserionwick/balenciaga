// -------------------------------------- RESPONSIVE -------------------------------------- //
$media_queries : (
    'mobile'    : "only screen and (max-width: 425px)",
    'tablet'    : "only screen and (max-width: 768px)",
    'laptop'   : "only screen and (max-width: 1024px)",
    'desktop'   : "only screen and (max-width: 1440px)",
    '4k'   : "only screen and (min-width: 1440px)",
    'retina2'   : "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)",
    'retina3'   : "only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)",
    'landscape' : "screen and (orientation:landscape) ",    
    'portrait'  : "screen and (orientation:portrait) "
);

@mixin respondTo($breakpoints) {
    $conditions : ();
    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append(
            $conditions,
            #{inspect(map-get($media_queries, $breakpoint))},
            comma
        );
    }

    @media #{$conditions} {
        @content;
    }

}



// -------------------------------------- UI -------------------------------------- //

// Colors
$priColor: #0e0f0f;
$secColor: #3185e4;
$bkgColor: #f4f4f6;

$setColor1: lighten($priColor, 50%);
$setColor2: #585858;

$sucColor: #006a00;
$wrnColor: #dbbd14;
$errColor: #db4b4b;

// Fonts
@import url('https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;0,800;1,200;1,300;1,400;1,500;1,600;1,700;1,800&display=swap');
$priFont: Plus Jakarta Sans;


// Buttons
.buttonClear {
    cursor: pointer;
    text-decoration: none;
    background: none;
    border: 0;
    color: unset;
}
.buttonClear2 {
    cursor: pointer;
    text-decoration: underline;
    background: none;
    border: 0;
    color: unset;
}

.buttonS1{
    font: 800 11pt $priFont;
    display: inline-block;
    text-align: center;
    color: black;
    background: white;
    border: 2px solid black;
    border-radius: 50px;
    padding: 6px 16px;
    text-transform: uppercase;
    text-decoration: none;
    cursor: pointer;
    &:hover{
        background: mix(white, black, 85%);
    }
    &:active{
        background: mix(white, black, 65%);
    }
}

.buttonS2{
    font: 800 11pt $priFont;
    display: inline-block;
    text-align: center;
    color: white;
    background: black;
    border: 2px solid black;
    border-radius: 50px;
    padding: 6px 16px;
    text-transform: uppercase;
    text-decoration: none;
    cursor: pointer;
    &:hover{
        background: mix(black, white, 95%);
        border-color: mix(black, white, 95%);
    }
    &:active{
        background: mix(black, white, 80%);
        border-color: mix(black, white, 80%);
    }
    
    &:disabled {
        cursor: default;
        background: mix(black, white, 50%);
        border-color: mix(black, white, 50%);
    }
}

.buttonS3{
    display: flex;
    justify-content: center;
    align-items: center;
    font: 800 7pt $priFont;
    width: 23px;
    height: 23px;
    color: white;
    background: black;
    border: 2px solid black;
    border-radius: 50px;
    text-transform: uppercase;
    text-decoration: none;
    cursor: pointer;
    &:hover{
        background: mix(black, white, 95%);
        border-color: mix(black, white, 95%);
    }
    &:active{
        background: mix(black, white, 80%);
        border-color: mix(black, white, 80%);
    }
}
.buttonS3--clear{
    display: flex;
    justify-content: center;
    align-items: center;
    font: 800 9pt $priFont;
    width: 25px;
    height: 25px;
    color: black;
    background: none;
    border: 2px solid transparent;
    border-radius: 50px;
    text-transform: uppercase;
    text-decoration: none;
    cursor: pointer;
    &:hover{
        background: mix(black, white, 10%);
        border-color: mix(black, white, 10%);
    }
    &:active{
        background: mix(black, white, 20%);
        border-color: mix(black, white, 20%);
    }
} 


// Forms
.formS1 {

    font: 500 11pt $priFont;

    // Forms: Layout
    .fRow {
        display: flex;
        justify-content: flex-start;
        flex: 1;
        margin: 10px 0;
        .fColumn,
        .fColumn--left, .fColumn--center, .fColumn--left {
            display: flex;
            flex-direction: column;
            flex: 1;
            margin-left: 10px;
            &:first-child{ margin-left: 0; }
        }

        .fColumn--left { align-items: flex-start; }
        .fColumn--center { align-items: center; }
        .fColumn--right { align-items: flex-end; }
    }

    label {
        display: flex;
        flex-direction: column;
    }



    // Forms: Inputs -> UI
    label.fInput, label.fInput--select{
        > input, > select, > textarea {
            width: 100%;
            font: 600 10pt $priFont;
            padding: 8px 11px;
            border: 1px solid black;
            background-color: rgba(white, .6);
            margin-bottom: 10px;
            outline: none;
            &:focus{
                border: 1px solid #3d3d3d;
                background: white;
            }
        }
        
        > select { cursor: pointer; }

        > textarea {
            resize: none;
            min-height: 150px;
        }

        > span {
            font: 600 11pt $priFont;
            margin-bottom: 5px;
        }
    }
    input.fInput{
        font: 600 10pt $priFont;
        padding: 8px 11px;
        border: 1px solid black;
        background-color: rgba(white, .6);
        margin-bottom: 10px;
        outline: none;
        &:focus{
            border: 1px solid #3d3d3d;
            background: white;
        }
    }
    select.fInput{
        cursor: pointer;
        font: 600 10pt $priFont;
        padding: 8px 11px;
        border: 1px solid black;
        background-color: rgba(white, .6);
        margin-bottom: 10px;
        outline: none;
        &:focus{
            border: 1px solid #3d3d3d;
            background: white;
        }
    }
    /* textarea.fInput{
        font: 600 10pt $priFont;
        padding: 8px 11px;
        border: 1px solid black;
        background-color: rgba(white, .6);
        margin-bottom: 10px;
        outline: none;
        &:focus{
            border: 1px solid #3d3d3d;
            background: white;
        }
    } */


    
    
    
    
    // Forms: Checkbox -> Layout
    .fCheckbox--left, .fCheckbox--center, .fCheckbox--right, 
    .fCheckbox--row--left, .fCheckbox--row--center, .fCheckbox--row--right {
        label {
            flex-direction: row;
            align-items: flex-start;
            margin-left: 10px;
            &:first-child{ margin-left: 0; }

            // Forms: Checkbox -> UI
            > input {
                margin: 3px;
                cursor: pointer;
            }

            > span {
                font: 500 10pt $priFont;
                cursor: pointer;
            }
        }
    }

    .fCheckbox--left{ 
        justify-content: flex-start; 
        align-items: center; 
    }
    .fCheckbox--center{ 
        justify-content: center; 
        align-items: center; 
    }
    .fCheckbox--right{ 
        justify-content: flex-end; 
        align-items: center; 
    }

    .fCheckbox--row--left{ 
        flex-direction: column; 
        align-items: flex-start; 
        justify-content: center; 
    }
    .fCheckbox--row--center{ 
        flex-direction: column; 
        align-items: center; 
        justify-content: center; 
    }
    .fCheckbox--row--right{ 
        flex-direction: column; 
        align-items: flex-end; 
        justify-content: center; 
    }


    // Forms: Radios -> UI
    .fRadio {
        > span {
            font: 600 11pt $priFont;
            margin-bottom: 5px;
        }
    }

    // Forms: Radios -> Layout
    .fRadios--left, .fRadios--center, .fRadios--right, 
    .fRadios--row--left, .fRadios--row--center, .fRadios--row--right {
        label {
            flex-direction: row;
            align-items: center;
            margin-left: 10px;
            &:first-child{ margin-left: 0; }

            // Forms: Radio -> UI
            > input {
                margin: 3px;
                cursor: pointer;
            }
            
            > span {
                font: 500 10pt $priFont;
                cursor: pointer;
            }
        }
    }
    
    .fRadios--left{ 
        justify-content: flex-start; 
        align-items: center; 
    }
    .fRadios--center{ 
        justify-content: center; 
        align-items: center; 
    }
    .fRadios--right{ 
        justify-content: flex-end; 
        align-items: center; 
    }

    .fRadios--row--left{ 
        flex-direction: column; 
        align-items: flex-start; 
        justify-content: center; 
    }
    .fRadios--row--center{ 
        flex-direction: column; 
        align-items: center; 
        justify-content: center; 
    }
    .fRadios--row--right{ 
        flex-direction: column; 
        align-items: flex-end; 
        justify-content: center; 
    }
    


    // Forms: Buttons -> Layout
    .fButtons--left, .fButtons--center, .fButtons--right{
        margin: 50px 0;
    }

    .fButtons--left{ 
        justify-content: flex-start; 
        align-items: flex-start; 
    }
    .fButtons--center{ 
        justify-content: center; 
        align-items: center; 
    }
    .fButtons--right{ 
        justify-content: flex-end; 
        align-items: flex-end; 
    }



    // Forms: Labels: Links
    a, button.linkify{
        cursor: pointer;
        text-decoration: none;
        color: black;
        background: none;
        border: 0;
        font: 500 10pt $priFont;
        &:hover { text-decoration: underline; }
    }

    // Forms: Labels: Paragraphs
    p{
        font-size: 9pt;
        margin: 30px 0;
    }

}

// Forms: Highlighters: Errors
.fError {
    color: $errColor !important;
    * {
        color: $errColor !important;
        border-color: $errColor !important;
    }

    input, select, option {
        color: black !important;
    }
}
input.fError {
    color: $errColor !important;
    border-color: $errColor !important;
}


// Animations

// Animation: Loading
@keyframes sk-bounce {
    0%, 100% { 
        transform: scale(0.0);
        -webkit-transform: scale(0.0);
    } 50% { 
        transform: scale(1.0);
        -webkit-transform: scale(1.0);
    }
}
span.loadingS1{
    display: block;
    width: 40px;
    height: 40px;
    position: relative;
    &:before, &:after {
        content: "";
        width: 100%;
        height: 100%;
        border-radius: 50%;
        background-color: mix(black, $priColor, 70%);
        opacity: 0.6;
        position: absolute;
        top: 0;
        left: 0;
        -webkit-animation: sk-bounce 2.0s infinite ease-in-out;
        animation: sk-bounce 2.0s infinite ease-in-out;
    }
    &:after {
        -webkit-animation-delay: -1.0s;
        animation-delay: -1.0s;
    }
}


// -------------------------------------- UX -------------------------------------- //

// Remove Element
.deleteMe{
    display: none !important;
}

// Can't Select Element
.noSelection {
    -webkit-touch-callout: none;
      -webkit-user-select: none;
       -khtml-user-select: none;
         -moz-user-select: none;
          -ms-user-select: none;
              user-select: none;
}

// Loading Zone
.loadingZone {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100vh;
    &.panel {
        width: 300px;
        height: 200px;
    }
}

// Skeleton Loading
@keyframes skeleton {
    from {
        background: mix($bkgColor, black, 90%)
    }

    to {
        background: mix($bkgColor, black, 95%)
    }
}
/* .skeleton--zone {
    
} */
.skeleton {
    background: mix($bkgColor, black, 90%);
    -webkit-animation: skeleton 500ms infinite alternate ease-in-out;
    animation: skeleton 500ms infinite alternate ease-in-out;
}

// -------------------------------------- MIXINS -------------------------------------- //

// Flex: Layout
@mixin flexRow() {
    display: flex;
    flex-direction: row;
}
@mixin flexColumn() {
    display: flex;
    flex-direction: column;
}


// Flex: Centerings
@mixin flexCenter() {
    display: flex;
    justify-content: center;
    align-items: center;
}
@mixin flexCenterV() {
    display: flex;
    align-items: center;
}
@mixin flexCenterH() {
    display: flex;
    justify-content: center;
}

@mixin flexCenterColumn() {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
@mixin flexCenterColumnV() {
    display: flex;
    flex-direction: column;
    justify-content: center;
}
@mixin flexCenterColumnH() {
    display: flex;
    flex-direction: column;
    align-items: center;
}



// Flex: Spread
@mixin flexSpaceBetween() {
    display: flex;
    justify-content: space-between;
}

// After: Add shadow background to element
@mixin shadowBackground {
    > * {
        z-index: 1;
    }
    &::after {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
        background-image:linear-gradient(180deg, rgba(black , 0.4) 15%, rgba(black , 0) 100%);
        z-index: 0;
    }
}
